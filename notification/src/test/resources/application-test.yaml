spring:
  application:
    name: bankNotifications
  sql.init:
    mode: ALWAYS
    schema-locations: classpath:schema.sql
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/bankapp
  kafka:
    consumer:
      bootstrap-servers: ${spring.embedded.kafka.brokers}
      group-id: bank-notifications
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.type.mapping: note:com.github.mrchcat.shared.notification.BankNotificationDto
        spring.json.trusted.packages: com.github.mrchcat.*
        isolation.level: read_committed
      enable-auto-commit: true
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.spring.json.type.mapping: note:com.github.mrchcat.shared.notification.BankNotificationDto

management.endpoints.web.exposure.include: info, health

logging:
  pattern.file: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  level:
    root: DEBUG
    org.zalando.logbook: DEBUG

application:
  kafka:
    topic:
      notifications: bank-notifications