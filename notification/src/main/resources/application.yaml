server.port: ${SERVER_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  sql.init:
    mode: ALWAYS
    schema-locations: classpath:schema.sql
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: bank-notifications
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.type.mapping: note:com.github.mrchcat.shared.notification.BankNotificationDto
      properties.spring.json.trusted.packages: com.github.mrchcat.notifications.*
      enable-auto-commit: true
      auto-offset-reset: earliest
    producer:
      transaction-id-prefix: bank-transaction-id


management.endpoints.web.exposure.include: info, health

logging:
  pattern.file: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  level:
    root: ${LOG_LEVEL:DEBUG}
    org.zalando.logbook: ${LOG_LEVEL:DEBUG}

application:
  kafka:
    topic:
      notifications: ${KAFKA_NOTIFICATIONS_TOPIC}