server.port: ${SERVER_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  sql.init:
    mode: always
    schema-locations: classpath:schema.sql

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
        registration:
          bank_cash:
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            clientAuthenticationMethod: client_secret_post

management.endpoints.web.exposure.include: info, health

logging:
  pattern.file: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  level:
    root: ${LOG_LEVEL:DEBUG}
    org.zalando.logbook: ${LOG_LEVEL:DEBUG}

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: TIME_BASED
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        slowCallDurationThreshold: 4s
        slowCallRateThreshold: 90
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        minimumNumberOfCalls: 10
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100ms

application:
  service:
    urls:
      account: ${SERVICE_URL_ACCOUNT}
      blocker: ${SERVICE_URL_BLOCKER}
      notifications: ${SERVICE_URL_NOTIFICATIONS}
      cash: ${SERVICE_URL_CASH}